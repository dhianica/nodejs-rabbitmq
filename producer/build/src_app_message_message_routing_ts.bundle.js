"use strict";exports.id="src_app_message_message_routing_ts",exports.ids=["src_app_message_message_routing_ts"],exports.modules={"./src/app/core/instance.ts"(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "IAMQPInstance": () => (/* binding */ IAMQPInstance)\n/* harmony export */ });\n/* harmony import */ var _private__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private */ "./src/app/core/private.ts");\n/* eslint-disable max-classes-per-file */ \nclass IAMQPInstance extends _private__WEBPACK_IMPORTED_MODULE_0__["default"] {\n}\n\n\n//# sourceURL=webpack://nodejs-rabbitmq-producer/./src/app/core/instance.ts?')},"./src/app/core/private.ts"(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var amqplib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! amqplib */ "amqplib");\n/* harmony import */ var amqplib__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(amqplib__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/enum */ "./src/utils/enum.ts");\n\n\n\n/**\r\n * @var {Promise<AMQPMessageBroker>}\r\n */ let instance;\n/**\r\n * Broker for async messaging\r\n */ class AMQPMessageBroker {\n    /**\r\n   * Initialize connection to rabbitMQ\r\n   */ async init() {\n        if (!this.connection && !this.channel) {\n            this.connection = await amqplib__WEBPACK_IMPORTED_MODULE_0__.connect(process.env.RABBITMQ_URL || \'amqp://localhost\');\n            this.channel = await this.connection.createChannel();\n        }\n        return this;\n    }\n    /**\r\n   * Send message to queue\r\n   * @param {String} queue Queue name\r\n   * @param {Object} msg Message as Buffer\r\n   */ async send(queue, msg, options) {\n        if (!this.connection && !this.channel) {\n            await this.init();\n        }\n        if (!queue) {\n            throw new Error(`${_utils_enum__WEBPACK_IMPORTED_MODULE_2__.ErrorMessage.NOT_DECLARED} the Queue`);\n        }\n        if (!msg) {\n            msg = \'\';\n        }\n        if (!options) {\n            options = {\n                durable: true\n            };\n        }\n        await this.channel?.assertQueue(queue, options);\n        this.channel?.sendToQueue(queue, Buffer.from(msg, \'utf-8\'));\n    }\n    /**\r\n   * @param {String} queue Queue name\r\n   * @param {Function} handler Handler that will be invoked with given message and acknowledge function (msg, ack)\r\n   */ async subscribe(queue, handler) {\n        if (!this.connection && !this.channel) {\n            await this.init();\n        }\n        if (!queue) {\n            throw new Error(`${_utils_enum__WEBPACK_IMPORTED_MODULE_2__.ErrorMessage.NOT_DECLARED} the Queue`);\n        }\n        if (this.queues[queue]) {\n            const existingHandler = lodash__WEBPACK_IMPORTED_MODULE_1__.find(this.queues[queue], (h)=>{\n                return h === handler;\n            });\n            if (existingHandler) {\n                return await this.unsubscribe(queue, existingHandler);\n            }\n            this.queues[queue].push(handler);\n            return await this.unsubscribe(queue, handler);\n        }\n        await this.channel?.assertQueue(queue, {\n            durable: true\n        });\n        this.queues[queue] = [\n            handler\n        ];\n        this.channel?.consume(queue, async (msg)=>{\n            const ack = lodash__WEBPACK_IMPORTED_MODULE_1__.once(()=>{\n                return this.channel?.ack(msg);\n            });\n            this.queues[queue].forEach((h)=>{\n                return h(msg, ack);\n            });\n        });\n        return await this.unsubscribe(queue, handler);\n    }\n    async unsubscribe(queue, handler) {\n        if (!queue) {\n            throw new Error(`${_utils_enum__WEBPACK_IMPORTED_MODULE_2__.ErrorMessage.NOT_DECLARED} the Queue`);\n        }\n        lodash__WEBPACK_IMPORTED_MODULE_1__.pull(this.queues[queue], handler);\n    }\n    constructor(){\n        this.queues = [];\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AMQPMessageBroker);\n\n\n//# sourceURL=webpack://nodejs-rabbitmq-producer/./src/app/core/private.ts?')},"./src/app/core/route.ts"(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema */ "./src/app/core/schema.ts");\n\n\nclass Route extends _schema__WEBPACK_IMPORTED_MODULE_1__["default"] {\n    get(path, ...params) {\n        if (this.useMiddleware) {\n            this.router.get(path, this.validate(this.schemaName), params);\n        } else {\n            this.router.get(path, params);\n        }\n    }\n    post(path, ...params) {\n        if (this.useMiddleware) {\n            this.router.post(path, this.validate(this.schemaName), params);\n        } else {\n            this.router.post(path, params);\n        }\n    }\n    delete(path, ...params) {\n        if (this.useMiddleware) {\n            this.router.delete(path, this.validate(this.schemaName), params);\n        } else {\n            this.router.delete(path, params);\n        }\n    }\n    put(path, ...params) {\n        if (this.useMiddleware) {\n            this.router.put(path, this.validate(this.schemaName), params);\n        } else {\n            this.router.put(path, params);\n        }\n    }\n    options(path, ...params) {\n        if (this.useMiddleware) {\n            this.router.options(path, this.validate(this.schemaName), params);\n        } else {\n            this.router.options(path, params);\n        }\n    }\n    constructor(schemaName, useMiddleware = true){\n        super();\n        this.router = express__WEBPACK_IMPORTED_MODULE_0__.Router();\n        this.schemaName = schemaName;\n        this.useMiddleware = useMiddleware;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Route);\n\n\n//# sourceURL=webpack://nodejs-rabbitmq-producer/./src/app/core/route.ts?')},"./src/app/message/message.controller.ts"(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/instance */ \"./src/app/core/instance.ts\");\n\nclass MessageController {\n    constructor(){\n        this.getAllMessages = async (req, res, next)=>{\n            console.log('===================================================');\n            console.log(`Run Send Message to Client ${JSON.stringify(req.query)}`);\n            try {\n                const amqp = new _core_instance__WEBPACK_IMPORTED_MODULE_0__.IAMQPInstance();\n                await amqp.send('logs', `${req.query.message}`, {\n                    durable: false,\n                    autoDelete: true\n                });\n                res.send({\n                    status: '0000',\n                    message: 'OK'\n                });\n            } catch (err) {\n                next(err);\n            }\n        };\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new MessageController());\n\n\n//# sourceURL=webpack://nodejs-rabbitmq-producer/./src/app/message/message.controller.ts?")},"./src/app/message/message.routing.ts"(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/route */ "./src/app/core/route.ts");\n/* harmony import */ var _message_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./message.controller */ "./src/app/message/message.controller.ts");\n\n\nclass MessageRouter extends _core_route__WEBPACK_IMPORTED_MODULE_0__["default"] {\n    constructor(schemaName){\n        super(schemaName, true);\n        this.path = \'/message\';\n        this.controller = _message_controller__WEBPACK_IMPORTED_MODULE_1__["default"];\n        this.get(\'/\', this.controller.getAllMessages);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MessageRouter);\n\n\n//# sourceURL=webpack://nodejs-rabbitmq-producer/./src/app/message/message.routing.ts?')}};